	<Table border = "0" width = "100%" id = "main-background" >			
			<tr align = "100%"> 
			<td style = "vertical-align:top; padding-left:20px;"> <a href = "pascal.html"> <img src = "img/home.png" width = "16" height = "16"> </a> >  <a href = "pascal_lesson_1.html"> Урок 1 </a> > <a href = "pascal_lesson_2.html"> Урок 2 </a> > <a href = "pascal_lesson_3.html"> Урок 3  </a> > <a href = "pascal_lesson_4.html"> Урок 4  </a> > <a href = "pascal_lesson_5.html"> Урок 5  </a> > <a href = "pascal_lesson_6.html"> Урок 6  </a> > <a href = "pascal_lesson_7.html"> Урок 7  > <a href = "pascal_lesson_8.html"> Урок 8 </a> > <a href = "pascal_lesson_9.html"> Урок 9 </a> > <a href = "pascal_lesson_10.html"> Урок 10 </a> > <a href = "pascal_lesson_11.html"> Урок 11 (Вы здесь) > <a href = "pascal_lesson_12.html"> Урок 12 </a> </td>
			</tr>														
				<TR height = "20" width = "100%" align = "center" >
					<TD>
						<h1 style = "color:#4169E1;"> Строки. Символьный и строковый тип данных </h1>
						
						
					</td>	
					<td> <img src = "img/l11.png" width = "200px" height = "250px"> </a> </td>
					</tr>
				

				<tr>
					<td>
						<h2> Описание символьных и строковых типов данных </h2>
						<p> Символьные и строковые константы в программе на Паскале записываются с помощью кавычек. Например 'T','0','+','@','abc123','Ягненок'
						<br>
						Символ может быть задан указанием его внутреннего кода, которому предшествует символ #. Например '#13' - символ Enter, '#27' - символ Esc
						 </p>
<textarea id = "code-frame" readonly style = "height:100px;">
VAR
ch:char; //Символьный тип.
str:string; //Строковый тип.
sss:string[6]; </textarea>
						<p> При описании строки допускается указание ее размера - максимальное количество символов, например, как в переменной sss
							<br>
							Если размер строки не указывается, то по умолчанию длина строки равна 255 байтам
						 </p>
					</td>
				</tr>
				<tr>
					<td>
						<p> Над данными символьного и строкового типа, как и над логическими, целыми и вещественными данными, определены операции сравнения и слияния нескольких строк в одну (s1+s2). </p>
						<h2> Функции для работы со строками в Паскале </h2>
						<ul>
							<li> <font color = "#4169E1"> Copy (S, poz, n) </font> - выделяет из строки S, начиная с позиции poz, подстроку из n символов. Здесь S – любое строковое выражение, poz, n – целочисленные выражения.</li>
							<li> <font color = "#4169E1"> Concat </font> (s1, s2,...,sn) -  Складывает строки s1, s2,...,sn в одну строку.</li>
							<li> <font color = "#4169E1"> Length(S) </font> - определяет текущую длину строкового выражения S. Результат – значение целого типа. </li>
							<li> <font color = "#4169E1"> Pos(subS, S) </font> - определяет позицию первого вхождения подстроки subS в строку S. Результат – целое число, номер позиции первого символа нужной (искомой) подстроки. Если вхождение подстроки не обнаружено, то результат функции будет равен 0. </li>
							<li> <font color = "#4169E1"> Delete (S, poz, n) </font> - Удаляет из строки S, начиная с позиции poz, n символов. Здесь S – строковая переменная.  poz, n – любые целочисленные выражения.</li>
							<li> <font color = "#4169E1"> Insert(subS, S, poz) </font> вставляет в строку S, начиная с позиции poz, подстроку subS. Здесь subS – любое строковое выражение, S – строковая переменная (именно ей будет присвоен результат выполнения процедуры), poz – выражение целочисленного типа. </li>
							<li> <font color = "#4169E1"> Str(x, S) </font> -  преобразует число x в строковый формат. Здесь x – любое числовое выражение, S – строковая переменная. В процедуре есть возможность задавать формат числа x. Например, str(x: 8: 3, S), где 8 – общее число знаков в числе x, а 3 – число знаков после запятой. </li>
							<li> <font color = "#4169E1"> Val(S, x, kod) </font> - преобразует строку символов S в число x. Здесь S – выражение строкового типа, x – числовая переменная (именно туда будет помещен результат), kod – целочисленная переменная (типа integer), которая равна номеру позиции в строке S, начиная с которой произошла ошибка преобразования, если преобразование прошло без ошибок, то переменная kod равна 0. </li>
						</ul>
					</td>
				</tr>
			</table>
